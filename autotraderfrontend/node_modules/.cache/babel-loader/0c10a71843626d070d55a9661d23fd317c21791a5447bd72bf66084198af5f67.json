{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lengy\\\\Desktop\\\\Suli\\\\IKT II\\\\Projekt3-main\\\\ProjektIII\\\\autotraderfrontend\\\\src\\\\components\\\\GetAllCars.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport DeleteCar from './DeleteCar';\nimport AddNewCar from './AddNewCar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = dateString => {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\nexport default function GetAllCars(props) {\n  _s();\n  const url = `http://localhost:5000/cars`;\n  const [carsData, setCarsData] = useState([]);\n  const [carToUpdate, setCarToUpdate] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [refreshCount, setRefreshCount] = useState(0);\n  const fetchCars = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const request = await fetch(url, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!request.ok) {\n        throw new Error(`HTTP error! status: ${request.status}`);\n      }\n      const response = await request.json();\n      setCarsData(response.result);\n      console.log(response.message);\n    } catch (e) {\n      setError(e.message);\n      console.error(\"Error fetching cars:\", e);\n    } finally {\n      setLoading(false);\n    }\n  }, [url]);\n  useEffect(() => {\n    fetchCars();\n  }, [fetchCars, refreshCount]);\n  const handleEditCar = carFromCard => {\n    setCarToUpdate(carFromCard);\n  };\n  const handleRefresh = useCallback(() => {\n    setRefreshCount(prevCount => prevCount + 1);\n    setCarToUpdate(null);\n  }, []);\n  const carElements = carsData.map(car => /*#__PURE__*/_jsxDEV(\"div\", {\n    onDoubleClick: () => handleEditCar(car),\n    className: \"car-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: car.brand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: car.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sz\\xEDn: \", car.color]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Gy\\xE1rt\\xE1si \\xE9v: \", car.myear ? formatDate(car.myear) : 'Nincs adat']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-actions\",\n      children: /*#__PURE__*/_jsxDEV(DeleteCar, {\n        carId: car.id,\n        handleCount: handleRefresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, car.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"get-all-cars-container\",\n    children: [/*#__PURE__*/_jsxDEV(AddNewCar, {\n      handleCount: handleRefresh,\n      carObj: carToUpdate,\n      handleCarObj: handleEditCar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading cars...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error loading cars: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"car-list\",\n      children: carElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(GetAllCars, \"1ugmON/8t+OJu4paIrXS3FzebLg=\");\n_c = GetAllCars;\nvar _c;\n$RefreshReg$(_c, \"GetAllCars\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","DeleteCar","AddNewCar","jsxDEV","_jsxDEV","formatDate","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","GetAllCars","props","_s","url","carsData","setCarsData","carToUpdate","setCarToUpdate","loading","setLoading","error","setError","refreshCount","setRefreshCount","fetchCars","request","fetch","headers","ok","Error","status","response","json","result","console","log","message","e","handleEditCar","carFromCard","handleRefresh","prevCount","carElements","map","car","onDoubleClick","className","children","brand","fileName","_jsxFileName","lineNumber","columnNumber","type","color","myear","carId","id","handleCount","carObj","handleCarObj","_c","$RefreshReg$"],"sources":["C:/Users/lengy/Desktop/Suli/IKT II/Projekt3-main/ProjektIII/autotraderfrontend/src/components/GetAllCars.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport DeleteCar from './DeleteCar';\r\nimport AddNewCar from './AddNewCar';\r\n\r\n\r\nconst formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n};\r\n\r\nexport default function GetAllCars(props) {\r\n    const url = `http://localhost:5000/cars`;\r\n    const [carsData, setCarsData] = useState([]);\r\n    const [carToUpdate, setCarToUpdate] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [refreshCount, setRefreshCount] = useState(0);\r\n\r\n    const fetchCars = useCallback(async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const request = await fetch(url, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n            if (!request.ok) {\r\n                throw new Error(`HTTP error! status: ${request.status}`);\r\n            }\r\n            const response = await request.json();\r\n            setCarsData(response.result);\r\n            console.log(response.message);\r\n        } catch (e) {\r\n            setError(e.message);\r\n            console.error(\"Error fetching cars:\", e);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [url]);\r\n\r\n    useEffect(() => {\r\n        fetchCars();\r\n    }, [fetchCars, refreshCount]);\r\n\r\n    const handleEditCar = (carFromCard) => {\r\n        setCarToUpdate(carFromCard);\r\n    };\r\n\r\n    const handleRefresh = useCallback(() => {\r\n        setRefreshCount(prevCount => prevCount + 1);\r\n        setCarToUpdate(null);\r\n    }, []);\r\n\r\n    const carElements = carsData.map((car) => (\r\n        <div\r\n            onDoubleClick={() => handleEditCar(car)}\r\n            className='car-card'\r\n            key={car.id}\r\n        >\r\n            <h3>{car.brand}</h3>\r\n            <p>{car.type}</p>\r\n            <p>Szín: {car.color}</p>\r\n            <p>Gyártási év: {car.myear ? formatDate(car.myear) : 'Nincs adat'}</p>\r\n            <div className=\"car-actions\">\r\n                <DeleteCar carId={car.id} handleCount={handleRefresh} />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <div className=\"get-all-cars-container\">\r\n            <AddNewCar handleCount={handleRefresh} carObj={carToUpdate} handleCarObj={handleEditCar} />\r\n\r\n            {loading && <p>Loading cars...</p>}\r\n            {error && <p>Error loading cars: {error}</p>}\r\n            <div className=\"car-list\">{carElements}</div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}